/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package test.osgi.plugin;


import org.apache.commons.io.FileUtils;
import org.apache.commons.io.FilenameUtils;
import org.apache.jackrabbit.api.JackrabbitRepository;
import org.apache.jackrabbit.commons.JcrUtils;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.TemporaryFolder;

import javax.jcr.Node;
import javax.jcr.Repository;
import javax.jcr.Session;
import javax.jcr.SimpleCredentials;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import static org.apache.commons.io.FilenameUtils.concat;
import static org.junit.Assert.assertNotNull;

public class SimpleRepositoryTest {

    @Rule
    public final TemporaryFolder tmpFolder = new TemporaryFolder();

    @Test(timeout = 60 * 1000)
    public void testRepositoryService() throws Exception{
        File targetFile = tmpFolder.newFolder("target");
        copyConfig("common", targetFile.getAbsolutePath());
        Map<String,String> config = new HashMap<String, String>();

        config.put("org.apache.jackrabbit.repository.home", targetFile.getAbsolutePath());
        config.put("org.apache.jackrabbit.oak.repository.configFile", path("oak-base-config.json")+","+path("oak-tar-config.json"));

        Repository repository = JcrUtils.getRepository(config);
        assertNotNull(repository);
        ((JackrabbitRepository)repository).shutdown();
    }

    private static String getBaseDir() {
        // 'basedir' is set by Maven Surefire. It always points to the current subproject,
        // even in reactor builds.
        String baseDir = System.getProperty("basedir");
        if(baseDir != null) {
            return baseDir;
        }
        return new File(".").getAbsolutePath();
    }

    private static String path(String path){
        File file = new File(FilenameUtils.concat(getBaseDir(), "src/test/resources/"+path));
        assert file.exists() : "No file found at " + file.getAbsolutePath();
        return file.getAbsolutePath();
    }

    protected void copyConfig(String type, String target) throws IOException {
        FileUtils.copyDirectory(new File(concat(getBaseDir(), "src/test/resources/config-" + type)),
                new File(concat(target, "config")));
    }

}
